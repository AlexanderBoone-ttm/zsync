.TH "zsyncmake" "1" "0.0.1" "Colin Phipps" "File Transfer"
.SH "NAME"
.LP 
zsyncmake \- Build control file for zsync(1)
.SH "SYNTAX"
.LP 
zsyncmake [ \-Z ] [ \-u \fIurl\fR ] [ \-U \fIurl\fR ] [ \-b \fIblocksize\fR ] [ \-o \fIoutfile\fR ] [ \-f \fItargetfilename\fR ] \fIfilename\fP
.SH "DESCRIPTION"
.LP 
Constructs a metafile for the zsync client program to use to perform partial file downloads. \fIfilename\fR is the file that users wish to downloads; zsyncmake constructs the appropriate metafile and writes \fIfilename\fR.zsync in the current directory.
.LP 
zsync will need at least one URL from which to download the file content. If the .zsync will be in the same directory as the file to download, you can accept the default \- zsync includes a relative URL in the control file. If not, use the \fB\-u\fR option to specify the URL. You should also specify a URL for the uncompressed content with \-U if available, as zsync can make use of this for more efficient downloads sometimes. (You can edit the .zsync file and add these afterwards \- it has a simple key: value format in the header \- but I suggest you only do this once you are familiar with the tool.)
.LP 
Note that zsyncmake itself does not (currently) verify the URLs or download any data, you must provide the file data locally and check the URLs yourself.
.SH "OPTIONS"
.LP 
.TP 
\fB\-u\fR \fIurl\fR
Specifies the URL from which users can download the content of the supplied file. Users need the control file in order to find out what parts of the file they already have, and they need the URLs to retrieve the parts of the file that they don't already have. You can specify multiple URLs by specifying \-u multiple times. If not specified, zsync assumes that the file and the .zsync will reside in the same public directory, and includes a single relative URL.
.TP 
\fB\-U\fR \fIurl\fR
Specifies a URL corresponding to the decompressed content of the file (only applicable if it is a gzip file). zsync can sometimes download more efficiently from the uncompressed data than from the compressed data \- it will take advantage of this if available. If no URLs are specifies, zsync looks for a file without the .gz extension and assumes that this will be in the same public dir as the .zsync, and includes a relative URL to it.
.TP 
\fB\-o\fR \fIoutputfile\fR
Override the default output file name.
.TP 
\fB\-f\fR \fIfilename\fR
Set the filename to include in the output file (this is what the file will be called when a user finished downloading it).
.TP 
\fB\-b\fR \fIblocksize\fR
Specify the blocksize to the underlying rsync algorithm. A smaller blocksize may be more efficient for files where there are likely to be lots of small, scattered changes between downloads; a larger blocksize may be more efficient for files with larger blocks of contiguous new or old data. This blocksize must be a power of two \- don't use anything other than 512, 1024 or 2048 unless you know what you are doing (although in that case you probably shouldn't even think of changing it anyway :\-).
.TP 
\fB\-Z\fR
zsyncmake automatically looks inside gzip compressed files and exports the underlying, uncompressed data to the zsyncmake file. In testing this has proved to provide greater download efficiency. \-Z overrides the default behaviour and treats gzip files as just binary data. Use this if it is essential that the user receives the compressed data (for instance because a cryptographic signature is available only for the compressed data). zsync is typically no use if you specify \-Z, unless the gzip file was compressed with the special \-\-rsync option to make it friendly to differential transfers.
.SH "EXAMPLES"
.LP 
zsyncmake \-u http://ftp.uk.debian.org/debian/dists/sarge/main/binary\-i386/Packages.gz Packages.gz

.SH "AUTHORS"
.LP 
Colin Phipps <cph@moria.org.uk>
.SH "SEE ALSO"
.LP 
zsync(1)
